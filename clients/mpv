#!/usr/bin/env bash
nc_args=("$@")

song_dir="$(emo getpaths songs)"
coproc nc (nc "${nc_args[@]}")
trap 'stop; exit' EXIT

socket="/tmp/mpvsoc-emo"

play() {
	file="$(mktemp)"
	trap 'rm "$file"' EXIT

	# shellcheck disable=SC2016
	mpv \
		--input-ipc-server="$socket" \
		--no-video \
		--term-status-msg='A: ${time-pos} / ${duration} (${percent-pos}%)\x0c' \
		"$song_dir/$1/file" \
		2>&1 \
	| while read -rd $'\f' line; do
		grep -q "killed" <<< "$line" && rm "$file" && continue
		echo "client mpv status ${line#*A: }"
	done | nc "${nc_args[@]}"
	[ -e "$file" ] && echo "next" | nc "${nc_args[@]}"
}

ipc() {
	printf '{"command": [%s]}\n' "$1" | socat - "$socket"
}

stop() {
	ipc '"run", "echo", "-e", "killed\f"'
	ipc '"quit"'
	paused=1
}

toggle() {
	((paused = 1 - paused))
	ipc '"set_property", "pause", '"$(sed "s|1|true|; s|0|false|" <<< "$paused")"''
}

paused=0
while read -ru "${nc[0]}" cmd; do
	case "$cmd" in
		"exit") stop; exit ;;
		"error empty queue") stop ;;
		"next-is "*)
			stop
			next_is="${cmd#next-is }"
			paused=0
			play "$next_is" &
			;;
		"client mpv toggle") toggle ;;
		"client mpv restart")
			ipc '"seek", 0'
			((paused)) && toggle
			;;
	esac
done
